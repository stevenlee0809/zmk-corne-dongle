#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        hrml: hrml {
            compatible = "zmk,behavior-hold-tap";
            label = "HRML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            hold-trigger-on-release;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <7 8 9 10 11 12 22 23 24 25 26 27 36 37 38 39 40 41 45 46 47>;
        };

        hrmr: hrmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HRMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            hold-trigger-on-release;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <0 1 2 3 4 5 13 14 15 16 17 18 28 29 30 31 32 33 34 42 43 44>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "BASE";
            bindings = <
&kp GRAVE  &kp Q  &kp W             &kp E               &kp R          &kp T                                &kp UP_ARROW             &kp Y        &kp U          &kp I                &kp O              &kp P     &kp PRINTSCREEN
&kp CAPS   &kp A  &hrml LEFT_ALT S  &hrml LEFT_SHIFT D  &hrml LCTRL F  &kp G                      &kp LEFT  &kp ENTER     &kp RIGHT  &kp H        &hrmr RCTRL J  &hrmr RIGHT_SHIFT K  &hrmr RIGHT_ALT L  &kp SEMI  &kp INSERT
&kp LGUI   &kp Z  &kp X             &kp C               &kp V          &kp B        &kp C_MUTE              &kp DOWN                 &kp N        &kp M          &kp COMMA            &kp DOT            &kp FSLH  &lt 5 RIGHT_GUI
                                    &lt 1 ESC           &lt 2 TAB      &lt 3 SPACE                                                   &lt 4 ENTER  &kp BACKSPACE  &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        nav_layer {
            display-name = "NAV";
            bindings = <
&none  &none     &none     &none      &none      &none                                &mmv MOVE_UP                     &mkp LCLK  &msc SCRL_DOWN  &msc SCRL_UP  &mkp RCLK  &none  &none
&none  &kp LGUI  &kp LALT  &kp LSHFT  &kp LCTRL  &none                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT   &kp DOWN        &kp UP        &kp RIGHT  &none  &none
&none  &none     &none     &none      &none      &none  &kp C_MUTE                    &mmv MOVE_DOWN                   &kp HOME   &kp PAGE_DOWN   &kp PAGE_UP   &kp END    &none  &kp RIGHT_GUI
                           &none      &none      &none                                                                 &none      &none           &none
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        number_layer {
            display-name = "NUM";
            bindings = <
&none  &none         &none     &none      &none      &none                           &mmv MOVE_UP                     &kp LBKT   &kp N7  &kp N8   &kp N9  &kp RBKT              &kp SLASH
&none  &kp LEFT_GUI  &kp LALT  &kp LSHFT  &kp LCTRL  &none           &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp GRAVE  &kp N4  &kp N5   &kp N6  &kp EQUAL             &kp ASTERISK
&none  &none         &none     &none      &none      &none  &none                    &mmv MOVE_DOWN                   &kp APOS   &kp N1  &kp N2   &kp N3  &kp NON_US_BACKSLASH  &kp PLUS
                               &none      &none      &none                                                            &kp MINUS  &kp N0  &kp DOT
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        symbol_layer {
            display-name = "SYM";
            bindings = <
&none  &none         &none     &none      &none      &none                           &mmv MOVE_UP                     &kp LEFT_BRACE     &kp AMPERSAND         &kp STAR               &kp LEFT_PARENTHESIS  &kp RIGHT_BRACE  &none
&none  &kp LEFT_GUI  &kp LALT  &kp LSHFT  &kp LCTRL  &none           &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp TILDE          &kp DOLLAR            &kp PERCENT            &kp CARET             &kp PLUS         &none
&none  &none         &none     &none      &none      &none  &none                    &mmv MOVE_DOWN                   &kp DOUBLE_QUOTES  &kp EXCLAMATION       &kp AT_SIGN            &kp HASH              &kp PIPE         &none
                               &none      &none      &none                                                            &kp UNDERSCORE     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        fn_layer {
            bindings = <
&kp LG(SPACE)  &kp F12  &kp F7  &kp F8  &kp F9  &kp PSCRN                        &none         &none  &none      &none      &none     &none     &none
&kp LA(LC(P))  &kp F11  &kp F4  &kp F5  &kp F6  &kp SCROLLLOCK            &none  &none  &none  &none  &kp RCTRL  &kp RSHFT  &kp RALT  &kp RGUI  &none
&kp LA(LC(N))  &kp F10  &kp F1  &kp F2  &kp F3  &kp PAUSE_BREAK  &none           &none         &none  &none      &none      &none     &none     &kp RGUI
                                &none   &none   &none                                          &none  &none      &none
            >;

            label = "Fn";
        };

        conf_layer {
            bindings = <
&none  &bt BT_CLR_ALL   &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3                     &none         &none  &none  &none  &none  &none  &none
&none  &rgb_ug RGB_OFF  &rgb_ug RGB_ON   &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR           &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &rgb_ug RGB_SPI  &rgb_ug RGB_SPD  &none            &none           &none         &none  &none  &none  &none  &none  &none
                                         &out OUT_USB     &out OUT_BLE     &sys_reset                                     &none  &none  &none
            >;

            label = "CONF";
        };
    };
};
